import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as t,c as o,a as n,b as a,d as r,f as l,r as p}from"./app.76aaae20.js";const i={},c=n("h2",{id:"难题",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#难题","aria-hidden":"true"},"#"),a(" 难题")],-1),u={id:"js-读写二进制数据",tabindex:"-1"},d=n("a",{class:"header-anchor",href:"#js-读写二进制数据","aria-hidden":"true"},"#",-1),k={href:"https://juejin.cn/post/6844903672678203405",target:"_blank",rel:"noopener noreferrer"},b=l(`<details class="custom-container details"><summary>Details</summary><ol><li><p>创建一个内存区域：<code>let buffer = new ArrayBuffer()</code> 生成的 buffer 指向的内存长度是 0 字节，没有意义。</p></li><li><p>创建一个有意义的内存区域 <code>buffer = new ArrayBuffer(8)</code></p></li><li><p><code> console.log(buffer[0])</code> 输出： undefined。 查看 buffer 内容的姿势不对</p></li></ol><ul><li>Int8Array：8 位有符号整数，长度 1 个字节。</li><li>Uint8Array： 8位无符号整数， 1 个字节长度。</li><li>Int16Array：16位有符号整数， 2 个字节长度。</li><li>Uint16Array：16位无符号整数，2 个字节长度。</li><li>Int32Array：32位有符号整数， 4 个字节长度。</li><li>Uint32Array：32位无符号整数， 4 个字节长度。</li><li>Float32Array：32位浮点数， 4 个字节长度。</li><li>Float64Array：64位浮点数，8 个字节长度。</li></ul><ol start="4"><li>创建一个读写buffer的桥梁：<code>let int8Array = new Int8Array(buffer);</code></li><li><code>console.log(int8Array[0]);</code> 输出：0, 初始化的时候，buffer 的各个字节存储的值默认都是 0</li><li>如何使用 Int8Array 给 buffer 赋值：</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>int8Array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>
int8Array<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">41</span><span class="token punctuation">;</span>

int8Array<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">52</span><span class="token punctuation">;</span>
int8Array<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">63</span><span class="token punctuation">;</span>

int8Array<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">74</span><span class="token punctuation">;</span>
int8Array<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">85</span><span class="token punctuation">;</span>

int8Array<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">86</span><span class="token punctuation">;</span>
int8Array<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">97</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Int8Array 是一个字节的长度，和 buffer 的单位一致，所以我们可以通过索引的形式对 buffer 指定位置进行赋值操作</p><ol start="7"><li><code>let int16Array = new Int16Array(buffer);</code></li><li><code>console.log(int16Array[0])</code> 输出：10526</li><li>由于 Int16Array 占两个字节，所以我们在用它读写数据的时候，一个索引所代表的数据等于 buffer 中两个字节。</li></ol></details>`,1);function m(f,v){const s=p("ExternalLinkIcon");return t(),o("div",null,[c,n("h1",u,[d,a(),n("a",k,[a("JS 读写二进制数据"),r(s)])]),b])}const _=e(i,[["render",m],["__file","level5.html.vue"]]);export{_ as default};
