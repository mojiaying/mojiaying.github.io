import{_ as t}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as p,c as o,d as a,e as n,f as c,b as s,r as i}from"./app.8a378504.js";const l={},r=s(`<h2 id="文件说明" tabindex="-1"><a class="header-anchor" href="#文件说明" aria-hidden="true">#</a> 文件说明</h2><ul><li><code>app.tsx</code> 应用程序的根组件。它是所有页面组件的父组件，可以用来添加全局样式、数据获取逻辑、错误处理等。</li><li>根组件类型<code>AppProps</code>包含两个参数： <code>Component</code> 和 <code>pageProps</code> 。 <ul><li>Component 参数是当前页面的组件，它会根据用户访问的 URL 动态加载不同的页面组件。</li><li>pageProps 参数是一个包含页面初始化属性的对象，它会传递给当前页面组件。</li></ul></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> type <span class="token punctuation">{</span> AppProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;next/app&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> Component<span class="token punctuation">,</span> pageProps <span class="token punctuation">}</span><span class="token operator">:</span> AppProps</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">&lt;</span>Component <span class="token punctuation">{</span><span class="token operator">...</span>pageProps<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="类-class-api-和基于函数的钩子-hooks-api-用哪个" tabindex="-1"><a class="header-anchor" href="#类-class-api-和基于函数的钩子-hooks-api-用哪个" aria-hidden="true">#</a> 类（class）API 和基于函数的钩子（hooks） API 用哪个</h2><p>官方推荐使用钩子（函数），而不是类。</p><ul><li>因为钩子更简洁，代码量少，</li><li>用起来比较&quot;轻&quot;，而类比较&quot;重&quot;</li><li>钩子是函数，更符合 React 函数式的本质。</li><li>类（class）是数据和逻辑的封装</li><li>函数一般来说，只应该做一件事，就是返回一个值</li><li>React 的函数组件只应该做一件事情：返回组件的 HTML 代码，而没有其他的功能</li></ul><p>函数式编程将那些跟数据计算无关的操作，都称为 &quot;副效应&quot; （side effect），这样就不再是纯函数了，</p><h2 id="什么是钩子hooks" tabindex="-1"><a class="header-anchor" href="#什么是钩子hooks" aria-hidden="true">#</a> 什么是钩子hooks</h2><p>钩子（hook）就是 React 函数组件的副效应解决方案，用来为函数组件引入副效应。</p><ul><li><code>useState</code> 当state数据更新时，会触发render函数从而更新页面</li><li><ul><li><code>useContext</code>：保存上下文</li></ul></li><li><code>useRef()</code>: 保存引用</li><li><code>useEffect</code>: <ul><li>第一个参数是一个函数，组件每渲染一次，该函数就自动执行一次；</li><li>第二个参数用一个数组指定副效应函数的依赖项，只有依赖项发生变化，才会重新渲染。</li><li>如果第二个参数是一个空数组，就表明副效应参数没有任何依赖项, 只在第一次加载执行一次，重新渲染不再执行</li><li>如果有多个副效应，应该调用多个useEffect()，而不应该合并写在一起。</li></ul></li></ul><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">function</span> <span class="token function">Welcome</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Hello, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>props<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>props<span class="token punctuation">.</span>name<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Hello, </span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="next-script-组件用法" tabindex="-1"><a class="header-anchor" href="#next-script-组件用法" aria-hidden="true">#</a> <code>next/script</code> 组件用法</h2>`,12),u=a("thead",null,[a("tr",null,[a("th",null,"Prop"),a("th",null,"Example"),a("th",null,"Type"),a("th",null,"Required")])],-1),d=a("td",null,"src",-1),k={href:"http://example.com/script",target:"_blank",rel:"noopener noreferrer"},v=a("td",null,"String",-1),h=a("td",null,"Required",-1),m=a("tr",null,[a("td",null,"strategy"),a("td",null,'strategy="lazyOnload"'),a("td",null,"String"),a("td",null,"-")],-1),g=a("tr",null,[a("td",null,"onLoad"),a("td",null,[a("code",null,"onLoad={onLoadFunc}")]),a("td",null,"Function"),a("td",null,"-")],-1),b=a("tr",null,[a("td",null,"onReady"),a("td",null,[a("code",null,"onReady={onReadyFunc}")]),a("td",null,"Function"),a("td",null,"-")],-1),x=a("tr",null,[a("td",null,"onError"),a("td",null,[a("code",null,"onError={onErrorFunc}")]),a("td",null,"Function"),a("td",null,"-")],-1),f=s(`<p><code>strategy</code></p><p>脚本加载策略有四种</p><p><code>beforeInteractive</code>: 在服务器端插入到HTML中，在任何next模块之前加载，在任何交互之前加载，必须放置在根布局（app/layout.tsx） <code>afterInteractive</code>: (default) Load early but after some hydration on the page occurs. <code>lazyOnload</code>: Load during browser idle time. <code>worker</code>: (experimental) Load in a web worker.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> type <span class="token punctuation">{</span> AppProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;next/app&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> FeConfigsType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/types&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> Script <span class="token keyword">from</span> <span class="token string">&#39;next/script&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> Component<span class="token punctuation">,</span> pageProps <span class="token punctuation">}</span><span class="token operator">:</span> AppProps</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>scripts<span class="token punctuation">,</span> setScripts<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>FeConfigsType<span class="token punctuation">[</span><span class="token string">&#39;scripts&#39;</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">clientInitData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">feConfigs</span><span class="token operator">:</span> <span class="token punctuation">{</span> scripts <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token operator">=</span> res
        <span class="token function">setScripts</span><span class="token punctuation">(</span>scripts <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span><span class="token operator">&gt;</span>
    <span class="token punctuation">{</span><span class="token comment">/* 懒加载引入所需的js文件 */</span><span class="token punctuation">}</span>
    <span class="token punctuation">{</span>scripts<span class="token operator">?.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>Script key<span class="token operator">=</span><span class="token punctuation">{</span>i<span class="token punctuation">}</span> strategy<span class="token operator">=</span><span class="token string">&quot;lazyOnload&quot;</span> src<span class="token operator">=</span><span class="token punctuation">{</span><span class="token operator">...</span>item<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>Script<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
    <span class="token operator">&lt;</span>Component <span class="token punctuation">{</span><span class="token operator">...</span>pageProps<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// types.ts</span>
<span class="token keyword">export</span> type FeConfigsType <span class="token operator">=</span> <span class="token punctuation">{</span>
  beianText<span class="token operator">?</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
  googleClientVerKey<span class="token operator">?</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
  gitLoginKey<span class="token operator">?</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
  scripts<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>key<span class="token operator">:</span> string<span class="token punctuation">]</span><span class="token operator">:</span> string <span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div><h3 id="-1" tabindex="-1"><a class="header-anchor" href="#-1" aria-hidden="true">#</a></h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div><h3 id="-2" tabindex="-1"><a class="header-anchor" href="#-2" aria-hidden="true">#</a></h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div><h3 id="-3" tabindex="-1"><a class="header-anchor" href="#-3" aria-hidden="true">#</a></h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div><h3 id="-4" tabindex="-1"><a class="header-anchor" href="#-4" aria-hidden="true">#</a></h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div><h3 id="-5" tabindex="-1"><a class="header-anchor" href="#-5" aria-hidden="true">#</a></h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div><h3 id="-6" tabindex="-1"><a class="header-anchor" href="#-6" aria-hidden="true">#</a></h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div><h3 id="-7" tabindex="-1"><a class="header-anchor" href="#-7" aria-hidden="true">#</a></h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div><h3 id="-8" tabindex="-1"><a class="header-anchor" href="#-8" aria-hidden="true">#</a></h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div><h3 id="-9" tabindex="-1"><a class="header-anchor" href="#-9" aria-hidden="true">#</a></h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div><h3 id="-10" tabindex="-1"><a class="header-anchor" href="#-10" aria-hidden="true">#</a></h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div><h3 id="-11" tabindex="-1"><a class="header-anchor" href="#-11" aria-hidden="true">#</a></h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div><h3 id="-12" tabindex="-1"><a class="header-anchor" href="#-12" aria-hidden="true">#</a></h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div><h3 id="-13" tabindex="-1"><a class="header-anchor" href="#-13" aria-hidden="true">#</a></h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div><h3 id="-14" tabindex="-1"><a class="header-anchor" href="#-14" aria-hidden="true">#</a></h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div><h3 id="-15" tabindex="-1"><a class="header-anchor" href="#-15" aria-hidden="true">#</a></h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div>`,37);function j(y,_){const e=i("ExternalLinkIcon");return p(),o("div",null,[r,a("table",null,[u,a("tbody",null,[a("tr",null,[d,a("td",null,[n('src="'),a("a",k,[n("http://example.com/script"),c(e)]),n('"')]),v,h]),m,g,b,x])]),f])}const C=t(l,[["render",j],["__file","index.html.vue"]]);export{C as default};
