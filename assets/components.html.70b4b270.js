import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,b as t}from"./app.8a378504.js";const p={},e=t(`<h1 id="组件用法" tabindex="-1"><a class="header-anchor" href="#组件用法" aria-hidden="true">#</a> 组件用法</h1><h2 id="根组件" tabindex="-1"><a class="header-anchor" href="#根组件" aria-hidden="true">#</a> 根组件</h2><h3 id="queryclientprovider" tabindex="-1"><a class="header-anchor" href="#queryclientprovider" aria-hidden="true">#</a> QueryClientProvider</h3><ul><li><code>React Query</code> 是一个用于管理和缓存数据的库，它提供了一种简单而强大的方式来处理数据获取、缓存、自动重试等功能。</li><li><code>QueryClient</code> 是 React Query 的核心对象，它负责管理数据查询和缓存，并提供了一些全局配置选项。</li><li><code>QueryClientProvider</code> 组件的作用是将 QueryClient 实例注入到 React 应用的组件树中，以便在整个应用中共享该实例。</li><li>通过将 <code>QueryClient</code> 实例提供给 <code>QueryClientProvider</code> ，我们可以确保在应用的任何地方都可以使用 React Query 的功能，如数据查询、缓存管理、自动重试等。</li><li>我们可以在应用的其他组件中使用 React Query 提供的钩子函数（如 useQuery 、 useMutation 等）来进行数据查询和管理，而不需要在每个组件中单独创建和配置 QueryClient 实例</li></ul><h3 id="chakraprovider" tabindex="-1"><a class="header-anchor" href="#chakraprovider" aria-hidden="true">#</a> ChakraProvider</h3><ul><li><code>ChakraProvider</code> 是 Chakra UI 库提供的一个 React 组件，用于在 React 应用中提供全局的 Chakra UI 主题和样式,确保在应用的任何地方都可以使用 Chakra UI 的组件和样式</li><li><code>extendTheme</code> 函数创建了一个 Chakra UI 主题对象，并将其传递给 <code>ChakraProvider</code> 组件的 <code>theme</code> 属性</li><li><code>ChakraProvider</code> 组件包裹在应用的根组件中，以确保整个应用都可以访问到 Chakra UI 的主题和样式</li><li><code>ChakraProvider</code> 组件只需要在应用的根组件中使用一次</li></ul><h3 id="colormodescript" tabindex="-1"><a class="header-anchor" href="#colormodescript" aria-hidden="true">#</a> ColorModeScript</h3><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ChakraProvider<span class="token punctuation">,</span> extendTheme<span class="token punctuation">,</span> ColorModeScript <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@chakra-ui/react&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">extendTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// Chakra UI 主题配置</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> Component<span class="token punctuation">,</span> pageProps <span class="token punctuation">}</span><span class="token operator">:</span> AppProps</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">QueryClientProvider</span></span> <span class="token attr-name">client</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>queryClient<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ChakraProvider</span></span> <span class="token attr-name">theme</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>theme<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ColorModeScript</span></span> <span class="token attr-name">initialColorMode</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>theme<span class="token punctuation">.</span>config<span class="token punctuation">.</span>initialColorMode<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Layout</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Component</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>pageProps<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Layout</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ChakraProvider</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">QueryClientProvider</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="提示框二次封装" tabindex="-1"><a class="header-anchor" href="#提示框二次封装" aria-hidden="true">#</a> 提示框二次封装</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useToast <span class="token keyword">as</span> uToast<span class="token punctuation">,</span> UseToastOptions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@chakra-ui/react&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">useToast</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">props<span class="token operator">?</span><span class="token operator">:</span> UseToastOptions</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> toast <span class="token operator">=</span> <span class="token function">uToast</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">position</span><span class="token operator">:</span> <span class="token string">&#39;top&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">duration</span><span class="token operator">:</span> <span class="token number">2000</span><span class="token punctuation">,</span>
    <span class="token operator">...</span>props
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    toast
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="全局进度条" tabindex="-1"><a class="header-anchor" href="#全局进度条" aria-hidden="true">#</a> 全局进度条</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> NProgress <span class="token keyword">from</span> <span class="token string">&#39;nprogress&#39;</span><span class="token punctuation">;</span> 
<span class="token keyword">import</span> <span class="token string">&#39;nprogress/nprogress.css&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> Router <span class="token keyword">from</span> <span class="token string">&#39;next/router&#39;</span><span class="token punctuation">;</span>
Router<span class="token punctuation">.</span>events<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;routeChangeStart&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> NProgress<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Router<span class="token punctuation">.</span>events<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;routeChangeComplete&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> NProgress<span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Router<span class="token punctuation">.</span>events<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;routeChangeError&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> NProgress<span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="icon" tabindex="-1"><a class="header-anchor" href="#icon" aria-hidden="true">#</a> Icon</h2><ol><li>使用 Chakra UI 图标库, 图标名称引入，直接使用</li><li>使用第三方图标库：<code>as</code> 属性引入文件</li><li>使用自定义图标库</li></ol>`,14),o=[e];function c(i,l){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","components.html.vue"]]);export{k as default};
