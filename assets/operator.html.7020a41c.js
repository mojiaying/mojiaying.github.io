import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,f as e}from"./app.76aaae20.js";const o={},p=e(`<h1 id="运算符" tabindex="-1"><a class="header-anchor" href="#运算符" aria-hidden="true">#</a> 运算符</h1><p><strong>算术运算符:</strong> 加(+),减(-),乘(*),除(/),取余(%)</p><p><strong>复合运算符:</strong><code> *=、/=、+=、-=、%=</code> ,<code>n*=2</code> 等同于<code> n=n*2</code></p><p><strong>一元运算符:</strong></p><ul><li>前置运算符：先执行后赋值 <code>++i</code>, <code>--i</code></li><li>后置运算符：先赋值后执行 <code>i++</code>, <code>i--</code></li></ul><p><strong>比较运算符:</strong> <code>&gt;, &lt;, &gt;=, &lt;=, ==, ===, !=</code></p><p><strong>逻辑运算符:</strong> <code>&amp;&amp;, ||, !</code>. , 优先级：() &gt; &amp;&amp; &gt; ||</p><p><strong>短路运算:</strong> <code>a || f</code>, <code>f &amp;&amp; a</code></p><p><strong>流程控制:</strong></p><ul><li><p><code>if/else if/else</code></p></li><li><p>三元表达式： <code>true ? &#39;yes&#39; : &#39;no</code></p></li><li><p>switch</p></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">switch</span> <span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">case</span> <span class="token string">&#39;a&#39;</span><span class="token operator">:</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hdcms.com&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token keyword">case</span> <span class="token string">&#39;b&#39;</span><span class="token operator">:</span>
  <span class="token keyword">case</span> <span class="token string">&#39;c&#39;</span><span class="token operator">:</span> <span class="token comment">// case可以合用</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;houdunren.com&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// break; 没有break会继续执行</span>
  <span class="token keyword">default</span><span class="token operator">:</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;houdunwang.com&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>while(循环条件)</code></li><li><code>do/while</code> <code>do{循环体}while(循环条件)</code></li><li><code>for</code><ul><li>break（终止） 用于退出当前循环，continue（跳过） 继续下一次循环。</li><li>标签(label) 为程序定义位置，可以使用continue/break跳到该位置。</li></ul></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">houdunren</span><span class="token operator">:</span> <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">hdcms</span><span class="token operator">:</span> <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> n <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> n <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">;</span> n<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">continue</span> hdcms<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> n <span class="token operator">&gt;</span> <span class="token number">15</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">break</span> houdunren<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>for/in</code>用于遍历对象的所有属性</li><li><code>for/of</code>用来遍历可迭代的数据结构(数组,字符串, Maps,Sets等),每次循环取其中的值</li></ul>`,14),t=[p];function c(l,i){return s(),a("div",null,t)}const d=n(o,[["render",c],["__file","operator.html.vue"]]);export{d as default};
