import{_ as t}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as p,c as e,d as n,e as s,f as o,b as c,r as l}from"./app.8a378504.js";const i={},r=n("h1",{id:"next-api",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#next-api","aria-hidden":"true"},"#"),s(" next API")],-1),u=n("h2",{id:"next-script-组件用法",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#next-script-组件用法","aria-hidden":"true"},"#"),s(),n("code",null,"next/script"),s(" 组件用法")],-1),d=n("thead",null,[n("tr",null,[n("th",null,"Prop"),n("th",null,"说明"),n("th",null,"Type"),n("th",null,"Required")])],-1),k=n("td",null,"src",-1),v={href:"http://example.com/script",target:"_blank",rel:"noopener noreferrer"},m=n("td",null,"String",-1),h=n("td",null,"Required",-1),g=n("tr",null,[n("td",null,"strategy"),n("td",null,'strategy="lazyOnload"'),n("td",null,"String"),n("td",null,"-")],-1),b=n("tr",null,[n("td",null,"onLoad"),n("td",null,"加载完成后执行"),n("td",null,"Function"),n("td",null,[n("code",null,"use client")])],-1),y=n("tr",null,[n("td",null,"onReady"),n("td",null,"每次加载完成或组件重新挂载时执行"),n("td",null,"Function"),n("td",null,[n("code",null,"use client")])],-1),_=n("tr",null,[n("td",null,"onError"),n("td",null,"加载失败后执行"),n("td",null,"Function"),n("td",null,[n("code",null,"use client")])],-1),f=c(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> type <span class="token punctuation">{</span> AppProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;next/app&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> FeConfigsType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/types&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> Script <span class="token keyword">from</span> <span class="token string">&#39;next/script&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> Component<span class="token punctuation">,</span> pageProps <span class="token punctuation">}</span><span class="token operator">:</span> AppProps</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>scripts<span class="token punctuation">,</span> setScripts<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>FeConfigsType<span class="token punctuation">[</span><span class="token string">&#39;scripts&#39;</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">clientInitData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">feConfigs</span><span class="token operator">:</span> <span class="token punctuation">{</span> scripts <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token operator">=</span> res
        <span class="token function">setScripts</span><span class="token punctuation">(</span>scripts <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span><span class="token operator">&gt;</span>
    <span class="token punctuation">{</span><span class="token comment">/* 懒加载引入所需的js文件 */</span><span class="token punctuation">}</span>
    <span class="token punctuation">{</span>scripts<span class="token operator">?.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>Script key<span class="token operator">=</span><span class="token punctuation">{</span>i<span class="token punctuation">}</span> strategy<span class="token operator">=</span><span class="token string">&quot;lazyOnload&quot;</span> src<span class="token operator">=</span><span class="token punctuation">{</span><span class="token operator">...</span>item<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>Script<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
    <span class="token operator">&lt;</span>Component <span class="token punctuation">{</span><span class="token operator">...</span>pageProps<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// types.ts</span>
<span class="token keyword">export</span> type FeConfigsType <span class="token operator">=</span> <span class="token punctuation">{</span>
  beianText<span class="token operator">?</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
  googleClientVerKey<span class="token operator">?</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
  gitLoginKey<span class="token operator">?</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
  scripts<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>key<span class="token operator">:</span> string<span class="token punctuation">]</span><span class="token operator">:</span> string <span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="strategy-可用值" tabindex="-1"><a class="header-anchor" href="#strategy-可用值" aria-hidden="true">#</a> strategy 可用值</h3><table><thead><tr><th>value</th><th>加载时间</th><th>备注</th></tr></thead><tbody><tr><td>beforeInteractive</td><td>服务端 next 之前加载</td><td>永远插入到html head标签里</td></tr><tr><td>afterInteractive</td><td>客户端 注水时加载</td><td>页面在浏览器打开时加载</td></tr><tr><td>lazyOnload</td><td>浏览器空闲加载</td><td>页面在浏览器打开时加载</td></tr><tr><td>worker</td><td>offload to web worker</td><td>nextScriptWorker 设为true</td></tr></tbody></table><h2 id="动态加载组件" tabindex="-1"><a class="header-anchor" href="#动态加载组件" aria-hidden="true">#</a> 动态加载组件</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> dynamic <span class="token keyword">from</span> <span class="token string">&#39;next/dynamic&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> RegisterForm <span class="token operator">=</span> <span class="token function">dynamic</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;./components/RegisterForm&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function x(w,j){const a=l("ExternalLinkIcon");return p(),e("div",null,[r,u,n("table",null,[d,n("tbody",null,[n("tr",null,[k,n("td",null,[s('src="'),n("a",v,[s("http://example.com/script"),o(a)]),s('"')]),m,h]),g,b,y,_])]),f])}const F=t(i,[["render",x],["__file","next.html.vue"]]);export{F as default};
