import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,f as t}from"./app.76aaae20.js";const e={},p=t(`<h1 id="js-基础知识" tabindex="-1"><a class="header-anchor" href="#js-基础知识" aria-hidden="true">#</a> JS 基础知识</h1><p>JS是一门网络脚本语言，可用于浏览器网页开发，可作为后端语言使用，可以跨平台，在浏览器或node环境中运行。</p><p><strong>避免页面加载延时</strong></p><ol><li>将脚本放在body最后面</li></ol><p><strong>变量声明var/let/const</strong><br> JS中的变量是弱类型（类型会随变量值改变而改变或者说变量没有类型而值有类型），变量名以字母、$、_ 开始</p><p>JS 语言关键字不能用来做变量名（true、if、while、class 等）</p><p>Js在执行代码之前会从上到下把代码分析一遍， 即是代码预解析，在代码预解析时对所有var声明的变量进行变量提升</p><p>var :</p><ul><li>创建初始化（undefined）提前，声明之前使用undefined，</li><li>可重复声明，函数作用域，全局变量不会被回收，</li><li>容易造成内存泄漏，do/while/for中定义变量会被外部访问。</li><li>全局声明的变量也存在于 window对象</li></ul><p>let/const（没有赋值过程） ：</p><ul><li>创建提前初始化不提前，声明前使用报错，</li><li>块作用域，同一作用域不能重复声明，</li><li>声明的全局变量并没有在全局对象中（window），只是一个块级作用域（Script）中</li><li>没有块即作用域时用立即执行函数模拟块作用域</li></ul><p>const：</p><ul><li>常量名建议全部大写</li><li>只能声明一次变量</li><li>声明时必须同时赋值</li><li>不允许再次全新赋值</li><li>可以修改引用类型变量的值</li><li>拥有块、函数、全局作用域 -<code>Object.freeze(obj);</code>冻结变量后也不可修改</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token constant">URL</span> <span class="token operator">=</span> <span class="token string">&quot;https://www.houdunren.com&quot;</span><span class="token punctuation">;</span>
  <span class="token constant">URL</span> <span class="token operator">=</span> <span class="token string">&quot;https://www.hdcms.com&quot;</span><span class="token punctuation">;</span> <span class="token comment">//产生错误</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>function：创建、初始化 和 赋值 都被提升</p><p><strong>传值与传址</strong><br> 变量保存基本类型的值和引用对象的指针,多个变量就引用的是同一个对象。</p><p><strong>undifined</strong>:<br> 对声明但未赋值的变量返回类型为 undefined 函数参数或无返回值是为undefined</p><p><strong>null</strong><br> 用于定义一个空对象，即如果变量要用来保存引用类型，可以在初始化时将其设置为 null</p><p><strong>严格模式</strong></p><ul><li>变量必须使用关键词声明(var,let,const,function)</li><li>关键词不允许做变量使用</li><li>变量参数不允许重复定义</li><li>单独为函数设置严格模式</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">strict</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token string">&quot;use strict&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token string">&quot;严格模式&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">notStrict</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token string">&quot;正常模式&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>多文件合并时，防止全局设置严格模式对其他没使用严格模式文件的影响，将脚本放在一个执行函数中。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token string">&quot;use strict&quot;</span><span class="token punctuation">;</span>
  url <span class="token operator">=</span> <span class="token string">&#39;houdunren.com&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,23),i=[p];function o(l,c){return s(),a("div",null,i)}const d=n(e,[["render",o],["__file","index.html.vue"]]);export{d as default};
